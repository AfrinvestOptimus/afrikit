var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.WithTrailingContent=exports.WithTopAndBottomMeta=exports.WithSwitch=exports.WithMultipleLines=exports.WithLinkAndSubTrigger=exports.WithIcon=exports.WithCheck=exports.WithAvatar=exports.WithAllProps=exports.Default=void 0;var _react=_interopRequireDefault(require("react"));var _AppText=_interopRequireDefault(require("../../../atoms/AppText"));var _molecules=require("../../../molecules");var _jsxRuntime=require("react-native-css-interop/jsx-runtime");var meta={title:'ListItem',component:_molecules.AppListItem,decorators:[function(Story){return(0,_jsxRuntime.jsx)(Story,{});}],argTypes:{size:{control:'select',options:['1','2'],defaultValue:'2'},variant:{control:'select',options:['1-line','2-line','3-line'],defaultValue:'1-line'},density:{control:'select',options:['default','relaxed','compact'],defaultValue:'default'},subTrigger:{control:'boolean',defaultValue:false},separator:{control:'boolean',defaultValue:false},title:{control:'text',defaultValue:'List Item Title'},subtitle:{control:'text',defaultValue:'List Item Subtitle'},topMeta:{control:'text',defaultValue:'Top Meta'},bottomMeta:{control:'text',defaultValue:'Bottom Meta'},isChecked:{control:'boolean',defaultValue:false},leading:{control:'select',options:['none','avatar','brand','icon','paymentMethod','flag','activity','productIcon','check','radio'],defaultValue:'none'},leadingContent:{control:'text',defaultValue:'Leading Content'},trailing:{control:'select',options:['none','textContent','text','link','icon','button','switch'],defaultValue:'none'},trailingTitle:{control:'text',defaultValue:'Trailing Title'},trailingSubtitle:{control:'text',defaultValue:'Trailing Subtitle'},trailingIcon:{control:'text',defaultValue:'check-line'},trailingIconColor:{control:'color',defaultValue:'red'},trailingContent:{control:'text',defaultValue:'Trailing Content'},onPress:{action:'pressed'}}};var _default=exports.default=meta;var defaults={size:'2',variant:'1-line',density:'default',subTrigger:false,separator:false,title:'List Item Title',subtitle:'List Item Subtitle',isChecked:false,leading:'none',leadingContent:'Leading Content',trailing:'none',trailingTitle:'Trailing Title',trailingSubtitle:'Trailing Subtitle',trailingIcon:'check-line',trailingIconColor:'red',trailingContent:'Trailing Content'};var Default=exports.Default={args:defaults};var WithAvatar=exports.WithAvatar={args:Object.assign({},defaults,{leading:'avatar'})};var WithIcon=exports.WithIcon={args:Object.assign({},defaults,{leading:'icon',trailing:'text',trailingTitle:'Trailing Text'})};var WithSwitch=exports.WithSwitch={args:Object.assign({},defaults,{trailing:'switch'})};var WithCheck=exports.WithCheck={args:Object.assign({},defaults,{leading:'check',isChecked:true})};var WithMultipleLines=exports.WithMultipleLines={args:Object.assign({},defaults,{variant:'2-line',subtitle:'This is a subtitle for the list item.'})};var WithAllProps=exports.WithAllProps={args:Object.assign({},defaults,{variant:'3-line',leading:'icon',trailing:'button',trailingTitle:'Action',subtitle:'This is a subtitle for the list item.',separator:true})};var WithTopAndBottomMeta=exports.WithTopAndBottomMeta={args:Object.assign({},defaults,{topMeta:'Top Meta',bottomMeta:'Bottom Meta'})};var WithTrailingContent=exports.WithTrailingContent={args:Object.assign({},defaults,{trailing:'textContent',trailingTitle:'Trailing Title',trailingSubtitle:'Trailing Subtitle',trailingIcon:'check-line',trailingIconColor:'red',trailingContent:(0,_jsxRuntime.jsx)(_AppText.default,{className:"text-blue-500",children:"Custom Trailing Content"})})};var WithLinkAndSubTrigger=exports.WithLinkAndSubTrigger={args:Object.assign({},defaults,{leading:'activity',trailing:'link',trailingContent:(0,_jsxRuntime.jsx)(_AppText.default,{className:"text-blue-500",children:"Link Text"}),subTrigger:true,activity:'system'})};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,