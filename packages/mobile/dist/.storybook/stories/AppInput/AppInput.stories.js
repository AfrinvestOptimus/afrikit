var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.WithError=exports.Multiline=exports.Focused=exports.FloatingLabel=exports.Default=exports.ClearableInput=void 0;var _addonActions=require("@storybook/addon-actions");var _react=_interopRequireDefault(require("react"));var _reactNative=require("react-native");var _AppInput=_interopRequireDefault(require("../../../molecules/AppInput"));var _jsxRuntime=require("react-native-css-interop/jsx-runtime");var _default=exports.default={title:'AppInput',component:_AppInput.default,parameters:{controls:{expanded:true}},argTypes:{onChangeText:{action:'text changed'},onFocus:{action:'focused'},onBlur:{action:'blurred'}}};var Template=function Template(args){return(0,_jsxRuntime.jsx)(_reactNative.View,{style:{padding:20},children:(0,_jsxRuntime.jsx)(_AppInput.default,Object.assign({},args))});};var Default=exports.Default=Template.bind({});Default.args={label:'Default Label',placeholder:'Enter text...',onChangeText:(0,_addonActions.action)('Text changed')};var Focused=exports.Focused=Template.bind({});Focused.args={label:'Focused Input',placeholder:'Enter text...',onChangeText:(0,_addonActions.action)('Text changed'),onFocus:(0,_addonActions.action)('Input focused')};var WithError=exports.WithError=Template.bind({});WithError.args={label:'Input with Error',placeholder:'Enter text...',error:'This field is required.',onChangeText:(0,_addonActions.action)('Text changed')};var Multiline=exports.Multiline=Template.bind({});Multiline.args={label:'Multiline Input',placeholder:'Enter multiple lines of text...',multiline:true,numberOfLines:4,onChangeText:(0,_addonActions.action)('Text changed')};var FloatingLabel=exports.FloatingLabel=Template.bind({});FloatingLabel.args={label:'Floating Label Input',placeholder:'Enter text...',FloatingLabel:true,onChangeText:(0,_addonActions.action)('Text changed')};var ClearableInput=exports.ClearableInput=Template.bind({});ClearableInput.args={label:'Clearable Input',placeholder:'Type something...',value:'Clear me!',onChangeText:(0,_addonActions.action)('Text changed')};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRkb25BY3Rpb25zIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3ROYXRpdmUiLCJfQXBwSW5wdXQiLCJfanN4UnVudGltZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiLCJ0aXRsZSIsImNvbXBvbmVudCIsIkFwcElucHV0IiwicGFyYW1ldGVycyIsImNvbnRyb2xzIiwiZXhwYW5kZWQiLCJhcmdUeXBlcyIsIm9uQ2hhbmdlVGV4dCIsImFjdGlvbiIsIm9uRm9jdXMiLCJvbkJsdXIiLCJUZW1wbGF0ZSIsImFyZ3MiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJwYWRkaW5nIiwiY2hpbGRyZW4iLCJPYmplY3QiLCJhc3NpZ24iLCJEZWZhdWx0IiwiYmluZCIsImxhYmVsIiwicGxhY2Vob2xkZXIiLCJGb2N1c2VkIiwiV2l0aEVycm9yIiwiZXJyb3IiLCJNdWx0aWxpbmUiLCJtdWx0aWxpbmUiLCJudW1iZXJPZkxpbmVzIiwiRmxvYXRpbmdMYWJlbCIsIkNsZWFyYWJsZUlucHV0IiwidmFsdWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uc3Rvcnlib29rL3N0b3JpZXMvQXBwSW5wdXQvQXBwSW5wdXQuc3Rvcmllcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJztcbmltcG9ydCB7IENvbXBvbmVudFN0b3J5LCBNZXRhIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgQXBwSW5wdXQgZnJvbSAnLi4vLi4vLi4vbW9sZWN1bGVzL0FwcElucHV0JzsgLy8gQWRqdXN0IHRoZSBwYXRoIGFzIG5lZWRlZFxuXG4vLyBTdG9yeWJvb2sgbWV0YWRhdGFcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICB0aXRsZTogJ0FwcElucHV0JywgLy8gVGl0bGUgaW4gU3Rvcnlib29rIHNpZGViYXJcbiAgICBjb21wb25lbnQ6IEFwcElucHV0LCAvLyBDb21wb25lbnQgdG8gYmUgcmVuZGVyZWRcbiAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICAgIGNvbnRyb2xzOiB7XG4gICAgICAgICAgICBleHBhbmRlZDogdHJ1ZSwgLy8gTWFrZXMgY29udHJvbHMgcGFuZWwgZXhwYW5kZWQgYnkgZGVmYXVsdFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgYXJnVHlwZXM6IHtcbiAgICAgICAgb25DaGFuZ2VUZXh0OiB7IGFjdGlvbjogJ3RleHQgY2hhbmdlZCcgfSxcbiAgICAgICAgb25Gb2N1czogeyBhY3Rpb246ICdmb2N1c2VkJyB9LFxuICAgICAgICBvbkJsdXI6IHsgYWN0aW9uOiAnYmx1cnJlZCcgfSxcbiAgICB9LFxufSBhcyBNZXRhPHR5cGVvZiBBcHBJbnB1dD47XG5cbi8vIFRlbXBsYXRlIGZvciB0aGUgY29tcG9uZW50XG5jb25zdCBUZW1wbGF0ZTogQ29tcG9uZW50U3Rvcnk8dHlwZW9mIEFwcElucHV0PiA9IChhcmdzKSA9PiAoXG4gICAgPFZpZXcgc3R5bGU9e3sgcGFkZGluZzogMjAgfX0+XG4gICAgICAgIDxBcHBJbnB1dCB7Li4uYXJnc30gLz5cbiAgICA8L1ZpZXc+XG4pO1xuXG4vLyBEZWZhdWx0IHN0b3J5XG5leHBvcnQgY29uc3QgRGVmYXVsdCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRGVmYXVsdC5hcmdzID0ge1xuICAgIGxhYmVsOiAnRGVmYXVsdCBMYWJlbCcsXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciB0ZXh0Li4uJyxcbiAgICBvbkNoYW5nZVRleHQ6IGFjdGlvbignVGV4dCBjaGFuZ2VkJyksIC8vIExvZ3MgYWN0aW9uIGluIFN0b3J5Ym9vayBhY3Rpb25zIHBhbmVsXG59O1xuXG4vLyBGb2N1c2VkIGlucHV0XG5leHBvcnQgY29uc3QgRm9jdXNlZCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRm9jdXNlZC5hcmdzID0ge1xuICAgIGxhYmVsOiAnRm9jdXNlZCBJbnB1dCcsXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciB0ZXh0Li4uJyxcbiAgICBvbkNoYW5nZVRleHQ6IGFjdGlvbignVGV4dCBjaGFuZ2VkJyksXG4gICAgb25Gb2N1czogYWN0aW9uKCdJbnB1dCBmb2N1c2VkJyksXG59O1xuXG4vLyBJbnB1dCB3aXRoIEVycm9yXG5leHBvcnQgY29uc3QgV2l0aEVycm9yID0gVGVtcGxhdGUuYmluZCh7fSk7XG5XaXRoRXJyb3IuYXJncyA9IHtcbiAgICBsYWJlbDogJ0lucHV0IHdpdGggRXJyb3InLFxuICAgIHBsYWNlaG9sZGVyOiAnRW50ZXIgdGV4dC4uLicsXG4gICAgZXJyb3I6ICdUaGlzIGZpZWxkIGlzIHJlcXVpcmVkLicsXG4gICAgb25DaGFuZ2VUZXh0OiBhY3Rpb24oJ1RleHQgY2hhbmdlZCcpLFxufTtcblxuLy8gTXVsdGlsaW5lIElucHV0XG5leHBvcnQgY29uc3QgTXVsdGlsaW5lID0gVGVtcGxhdGUuYmluZCh7fSk7XG5NdWx0aWxpbmUuYXJncyA9IHtcbiAgICBsYWJlbDogJ011bHRpbGluZSBJbnB1dCcsXG4gICAgcGxhY2Vob2xkZXI6ICdFbnRlciBtdWx0aXBsZSBsaW5lcyBvZiB0ZXh0Li4uJyxcbiAgICBtdWx0aWxpbmU6IHRydWUsXG4gICAgbnVtYmVyT2ZMaW5lczogNCxcbiAgICBvbkNoYW5nZVRleHQ6IGFjdGlvbignVGV4dCBjaGFuZ2VkJyksXG59O1xuXG4vLyBJbnB1dCB3aXRoIEZsb2F0aW5nIExhYmVsXG5leHBvcnQgY29uc3QgRmxvYXRpbmdMYWJlbCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRmxvYXRpbmdMYWJlbC5hcmdzID0ge1xuICAgIGxhYmVsOiAnRmxvYXRpbmcgTGFiZWwgSW5wdXQnLFxuICAgIHBsYWNlaG9sZGVyOiAnRW50ZXIgdGV4dC4uLicsXG4gICAgRmxvYXRpbmdMYWJlbDogdHJ1ZSxcbiAgICBvbkNoYW5nZVRleHQ6IGFjdGlvbignVGV4dCBjaGFuZ2VkJyksXG59O1xuXG4vLyBJbnB1dCB3aXRoIENsZWFyIEJ1dHRvblxuZXhwb3J0IGNvbnN0IENsZWFyYWJsZUlucHV0ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DbGVhcmFibGVJbnB1dC5hcmdzID0ge1xuICAgIGxhYmVsOiAnQ2xlYXJhYmxlIElucHV0JyxcbiAgICBwbGFjZWhvbGRlcjogJ1R5cGUgc29tZXRoaW5nLi4uJyxcbiAgICB2YWx1ZTogJ0NsZWFyIG1lIScsXG4gICAgb25DaGFuZ2VUZXh0OiBhY3Rpb24oJ1RleHQgY2hhbmdlZCcpLFxufTtcbiJdLCJtYXBwaW5ncyI6Im9SQUFBLElBQUFBLGFBQUEsQ0FBQUMsT0FBQSw2QkFFQSxJQUFBQyxNQUFBLENBQUFDLHNCQUFBLENBQUFGLE9BQUEsV0FDQSxJQUFBRyxZQUFBLENBQUFILE9BQUEsaUJBQ0EsSUFBQUksU0FBQSxDQUFBRixzQkFBQSxDQUFBRixPQUFBLGlDQUFtRCxJQUFBSyxXQUFBLENBQUFMLE9BQUEsNkNBQUFNLFFBQUEsQ0FBQUMsT0FBQSxDQUFBQyxPQUFBLENBR3BDLENBQ1hDLEtBQUssQ0FBRSxVQUFVLENBQ2pCQyxTQUFTLENBQUVDLGlCQUFRLENBQ25CQyxVQUFVLENBQUUsQ0FDUkMsUUFBUSxDQUFFLENBQ05DLFFBQVEsQ0FBRSxJQUNkLENBQ0osQ0FBQyxDQUNEQyxRQUFRLENBQUUsQ0FDTkMsWUFBWSxDQUFFLENBQUVDLE1BQU0sQ0FBRSxjQUFlLENBQUMsQ0FDeENDLE9BQU8sQ0FBRSxDQUFFRCxNQUFNLENBQUUsU0FBVSxDQUFDLENBQzlCRSxNQUFNLENBQUUsQ0FBRUYsTUFBTSxDQUFFLFNBQVUsQ0FDaEMsQ0FDSixDQUFDLENBR0QsR0FBTSxDQUFBRyxRQUF5QyxDQUFHLFFBQTVDLENBQUFBLFFBQXlDQSxDQUFJQyxJQUFJLFFBQ25ELEdBQUFoQixXQUFBLENBQUFpQixHQUFBLEVBQUNuQixZQUFBLENBQUFvQixJQUFJLEVBQUNDLEtBQUssQ0FBRSxDQUFFQyxPQUFPLENBQUUsRUFB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