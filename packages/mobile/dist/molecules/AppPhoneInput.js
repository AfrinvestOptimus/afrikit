var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativeReanimated=require("react-native-reanimated");var _reactNativeRemixIcon=_interopRequireDefault(require("react-native-remix-icon"));var _colors=_interopRequireDefault(require("afrikit-shared/dist/colors"));var _AppText=_interopRequireDefault(require("../atoms/AppText"));var _validation=require("../utilities/validation");var _AppHintText=_interopRequireDefault(require("./AppHintText"));var _jsxRuntime=require("react-native-css-interop/jsx-runtime");var _excluded=["onBlur","FloatingLabel","onFocus","error","multiline","type","label","numberOfLines","onChangeText","onCountryCodeChange","value"];function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var AppPhoneInput=function AppPhoneInput(_ref){var onBlur=_ref.onBlur,_ref$FloatingLabel=_ref.FloatingLabel,FloatingLabel=_ref$FloatingLabel===void 0?true:_ref$FloatingLabel,onFocus=_ref.onFocus,error=_ref.error,multiline=_ref.multiline,type=_ref.type,label=_ref.label,numberOfLines=_ref.numberOfLines,onChangeTextProp=_ref.onChangeText,defaultCountryChange=_ref.onCountryCodeChange,_ref$value=_ref.value,value=_ref$value===void 0?'':_ref$value,props=(0,_objectWithoutProperties2.default)(_ref,_excluded);var textInputRef=React.useRef(null);var _React$useState=React.useState(''),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),localValue=_React$useState2[0],setLocalValue=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),focused=_React$useState4[0],setFocused=_React$useState4[1];var _React$useState5=React.useState(value),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),inputValue=_React$useState6[0],setInputValue=_React$useState6[1];var animatedIsFocused=React.useRef(new _reactNative.Animated.Value(value?1:0)).current;var _React$useState7=React.useState({code:'+234',text:'Nigeria',flag:'ðŸ‡³ðŸ‡¬'}),_React$useState8=(0,_slicedToArray2.default)(_React$useState7,2),selectedCountry=_React$useState8[0],setSelectedCountry=_React$useState8[1];React.useEffect(function(){_reactNative.Animated.timing(animatedIsFocused,{toValue:focused||inputValue?1:0,duration:200,useNativeDriver:false}).start();},[focused,animatedIsFocused,inputValue]);var _text=(0,_reactNativeReanimated.useSharedValue)(value);var onChangeText=React.useCallback(function(text){setInputValue(text);onChangeTextProp==null?void 0:onChangeTextProp(text);_text.value=text;},[_text]);var handleBlur=function handleBlur(e){if(type){(0,_validation.AppInputBlur)(localValue,onChangeText,false);}onBlur==null?void 0:onBlur(e);setFocused(false);};var handleFocus=function handleFocus(e){onFocus==null?void 0:onFocus(e);setFocused(true);};var addedProps=Object.assign({},props,{onChangeText:onChangeText,onBlur:handleBlur,onFocus:handleFocus,placeholder:FloatingLabel?undefined:props.placeholder});var floatLabelStyle={top:animatedIsFocused.interpolate({inputRange:[0,1],outputRange:[10,0]}),fontSize:animatedIsFocused.interpolate({inputRange:[0,1],outputRange:[12,11]}),lineHeight:animatedIsFocused.interpolate({inputRange:[0,1],outputRange:[12,20]})};var getBorderStyle=function getBorderStyle(){if(focused){return error?'border-b-2 border-light-red9 dark:border-dark-red9 rounded-tr-sm':'border-b-2 border-light-blue10 dark:border-dark-blue10 rounded-tr-sm';}return error?'border-2 border-light-red9 dark:border-dark-red9 rounded-r-md':'border-0 border-transparent rounded-r-md';};return(0,_jsxRuntime.jsxs)(_reactNative.View,{children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{className:'flex-row px-md',children:[(0,_jsxRuntime.jsx)(_reactNative.Pressable,{className:`px-sm mr-sm items-center flex-row bg-light-surface-gray h-[56px] rounded-l-md w-[101px]`,children:(0,_jsxRuntime.jsxs)(_reactNative.View,{className:"flex-row justify-between items-center",children:[(0,_jsxRuntime.jsx)(_AppText.default,{className:"w-[22px] rounded-full",children:selectedCountry.flag}),(0,_jsxRuntime.jsx)(_AppText.default,{className:"text-light-type-gray-default px-xs",size:2,color:"gray",children:selectedCountry.code}),(0,_jsxRuntime.jsx)(_reactNativeRemixIcon.default,{name:"arrow-down-s-fill",size:20,color:_colors.default.dark['white-to-dark']})]})}),(0,_jsxRuntime.jsx)(_reactNative.TouchableWithoutFeedback,{onPress:function onPress(){var _textInputRef$current;(_textInputRef$current=textInputRef.current)==null?void 0:_textInputRef$current.focus();},children:(0,_jsxRuntime.jsx)(_reactNative.View,{className:`px-sm items-center w-[255px] flex-row bg-light-surface-gray h-[56px] ${getBorderStyle()}`,children:(0,_jsxRuntime.jsxs)(_reactNative.View,{className:"flex-1",children:[FloatingLabel&&(0,_jsxRuntime.jsx)(_reactNative.Animated.Text,{style:[floatLabelStyle],className:"gap-xs dark:text-dark-type-gray-muted text-light-type-gray-muted",allowFontScaling:false,children:label}),(0,_jsxRuntime.jsx)(_reactNative.TextInput,Object.assign({},addedProps,{ref:textInputRef,allowFontScaling:false,hitSlop:{top:10,bottom:10,left:40,right:40},returnKeyType:"done",autoFocus:focused,numberOfLines:numberOfLines,value:inputValue,className:"text-light-type-gray-muted dark:text-dark-type-gray-muted"}))]})})})]}),!!error&&(typeof error==='string'?(0,_jsxRuntime.jsx)(_AppHintText.default,{type:"error",text:error,className:"py-xs px-lg"}):undefined)]});};var _default=exports.default=AppPhoneInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,